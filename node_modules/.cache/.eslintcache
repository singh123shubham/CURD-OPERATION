[{"F:\\taskfrontend\\CRUD-Operations-\\src\\index.js":"1","F:\\taskfrontend\\CRUD-Operations-\\src\\App.js":"2","F:\\taskfrontend\\CRUD-Operations-\\src\\EmpListing.js":"3","F:\\taskfrontend\\CRUD-Operations-\\src\\EmpDetail.js":"4","F:\\taskfrontend\\CRUD-Operations-\\src\\EmpCreate.js":"5","F:\\taskfrontend\\CRUD-Operations-\\src\\EmpEdit.js":"6","F:\\taskfrontend\\CRUD-Operations-\\src\\login.js":"7","F:\\taskfrontend\\CRUD-Operations-\\src\\Navbar.js":"8"},{"size":333,"mtime":1671606665433,"results":"9","hashOfConfig":"10"},{"size":839,"mtime":1671606648672,"results":"11","hashOfConfig":"10"},{"size":3589,"mtime":1671605347598,"results":"12","hashOfConfig":"10"},{"size":1760,"mtime":1671602602862,"results":"13","hashOfConfig":"10"},{"size":6027,"mtime":1671606484294,"results":"14","hashOfConfig":"10"},{"size":6418,"mtime":1671602575022,"results":"15","hashOfConfig":"10"},{"size":672,"mtime":1671604485976,"results":"16","hashOfConfig":"10"},{"size":949,"mtime":1671605782111,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hu3efv",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"F:\\taskfrontend\\CRUD-Operations-\\src\\index.js",[],[],"F:\\taskfrontend\\CRUD-Operations-\\src\\App.js",[],[],"F:\\taskfrontend\\CRUD-Operations-\\src\\EmpListing.js",["47","48","49"],[],"import { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst EmpListing = () => {\r\n    const [empdata, empdatachange] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const LoadDetail = (id) => {\r\n        navigate(\"/employee/detail/\" + id);\r\n    }\r\n    const LoadEdit = (id) => {\r\n        navigate(\"/employee/edit/\" + id);\r\n    }\r\n    const Removefunction = (id) => {\r\n        if (window.confirm('Do you want to remove?')) {\r\n            fetch(\"http://localhost:3000/employee/\" + id, {\r\n                method: \"DELETE\"\r\n            }).then((res) => {\r\n                alert('Removed successfully.')\r\n                window.location.reload();\r\n            }).catch((err) => {\r\n                console.log(err.message)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:3000/employee\").then((res) => {\r\n            return res.json();\r\n        }).then((resp) => {\r\n            empdatachange(resp);\r\n        }).catch((err) => {\r\n            console.log(err.message);\r\n        })\r\n    }, [])\r\n    return (\r\n        <>\r\n        <Navbar/>\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <div className=\"card-title\">\r\n                    <h2>Employee Details</h2>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"divbtn\">\r\n                        <Link to=\"employee/create\" className=\"btn btn-success\">Add New (+)</Link>\r\n                    </div>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead className=\"bg-white text-black\">\r\n                            <tr>\r\n                                <td>ID</td>\r\n                                <td>Name</td>\r\n                                <td>Email</td>\r\n                                <td>Phone</td>\r\n                                <td>Gender</td>\r\n                                <td>Course</td>\r\n                                <td>Designation</td>\r\n\r\n                                \r\n                                <td>Action</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {empdata &&\r\n                                empdata.map(item => (\r\n                                    <tr key={item.id}>\r\n                                        <td>{item.id}</td>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.email}</td>\r\n                                        <td>{item.phone}</td>\r\n                                        <td>{item.gender}</td>\r\n                                        <td>{item.course}</td>\r\n                                        <td>{item.designation}</td>\r\n\r\n\r\n\r\n                                        <td><a onClick={() => { LoadEdit(item.id) }} className=\"btn btn-success\">Edit</a>\r\n                                            <a onClick={() => { Removefunction(item.id) }} className=\"btn btn-danger\">Remove</a>\r\n                                            <a onClick={() => { LoadDetail(item.id) }} className=\"btn btn-primary\">Details</a>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default EmpListing;","F:\\taskfrontend\\CRUD-Operations-\\src\\EmpDetail.js",["50"],[],"import { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\n\r\nconst EmpDetail = () => {\r\n    const { empid } = useParams();\r\n\r\n    const [empdata, empdatachange] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:3000/employee/\" + empid).then((res) => {\r\n            return res.json();\r\n        }).then((resp) => {\r\n            empdatachange(resp);\r\n        }).catch((err) => {\r\n            console.log(err.message);\r\n        })\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {/* <div className=\"row\">\r\n                <div className=\"offset-lg-3 col-lg-6\"> */}\r\n\r\n               <div className=\"container\">\r\n                \r\n            <div className=\"card row\" style={{ \"textAlign\": \"left\" }}>\r\n                <div className=\"card-title\">\r\n                    <h2>Employee Create</h2>\r\n                </div>\r\n                <div className=\"card-body\"></div>\r\n\r\n                {empdata &&\r\n                    <div>\r\n                        <h2>The Employee name is : <b>{empdata.name}</b>  ({empdata.id})</h2>\r\n                        <h3>Contact Details</h3>\r\n                        <h5>Email is : {empdata.email}</h5>\r\n                        <h5>Phone is : {empdata.phone}</h5>\r\n                        <h5>Phone is : {empdata.course}</h5>\r\n                        \r\n                        <h5>Phone is : {empdata.gender}</h5>\r\n                        <h5>Phone is : {empdata.designation}</h5>\r\n\r\n                        <Link className=\"btn btn-danger\" to=\"/\">Back to Listing</Link>\r\n                    </div>\r\n                }\r\n            </div>\r\n            </div>\r\n            {/* </div>\r\n            </div> */}\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default EmpDetail;","F:\\taskfrontend\\CRUD-Operations-\\src\\EmpCreate.js",["51","52"],[],"import { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst EmpCreate = () => {\r\n\r\n    const[id,idchange]=useState(\"\");\r\n    const[name,namechange]=useState(\"\");\r\n    const[email,emailchange]=useState(\"\");\r\n    const[phone,phonechange]=useState(\"\");\r\n    const[gender,genderchange]=useState('')\r\n    const[course,coursechange]=useState(\"\")\r\n    const[designation,designationchange]=useState(\"\")\r\n    const[active,activechange]=useState(true);\r\n    const[validation,valchange]=useState(false);\r\n\r\n\r\n    const navigate=useNavigate();\r\n\r\n    const handlesubmit=(e)=>{\r\n      e.preventDefault();\r\n      const empdata={name,email,phone,gender,course,designation,active};\r\n      \r\n\r\n      fetch(\"http://localhost:3000/employee\",{\r\n        method:\"POST\",\r\n        headers:{\"content-type\":\"application/json\"},\r\n        body:JSON.stringify(empdata)\r\n      }).then((res)=>{\r\n        alert('Saved successfully.')\r\n        navigate('/');\r\n      }).catch((err)=>{\r\n        console.log(err.message)\r\n      })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"offset-lg-3 col-lg-6\">\r\n                    <form className=\"container\" onSubmit={handlesubmit}>\r\n\r\n                        <div className=\"card\" style={{\"textAlign\":\"left\"}}>\r\n                            <div className=\"card-title\">\r\n                                <h2>Create New Employee </h2>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>ID</label>\r\n                                            <input value={id} disabled=\"disabled\" className=\"form-control\"></input>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Name</label>\r\n                                            <input required value={name} onMouseDown={e=>valchange(true)} onChange={e=>namechange(e.target.value)} className=\"form-control\"></input>\r\n                                        {name.length==0 && validation && <span className=\"text-danger\">Enter the name</span>}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Email</label>\r\n                                            <input value={email} onChange={e=>emailchange(e.target.value)} className=\"form-control\"></input>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Phone</label>\r\n                                            <input value={phone} onChange={e=>phonechange(e.target.value)} className=\"form-control\"></input>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Gender</label>\r\n                                            <input value={gender} onChange={e=>genderchange(e.target.value)} className=\"form-control\"></input>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Course</label>\r\n                                            <input value={course} onChange={e=>coursechange(e.target.value)} className=\"form-control\"></input>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>Designation</label>\r\n                                            <input value={designation} onChange={e=>designationchange(e.target.value)} className=\"form-control\"></input>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"form-check\">\r\n                                        <input checked={active} onChange={e=>activechange(e.target.checked)} type=\"checkbox\" className=\"form-check-input\"></input>\r\n                                            <label  className=\"form-check-label\">Is Active</label>\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-lg-12\">\r\n                                        <div className=\"form-group\">\r\n                                           <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                           <Link to=\"/\" className=\"btn btn-danger\">Back</Link>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmpCreate;","F:\\taskfrontend\\CRUD-Operations-\\src\\EmpEdit.js",["53","54"],[],"import { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst EmpEdit = () => {\r\n    const { empid } = useParams();\r\n\r\n    //const [empdata, empdatachange] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:3000/employee/\" + empid).then((res) => {\r\n            return res.json();\r\n        }).then((resp) => {\r\n            idchange(resp.id);\r\n            namechange(resp.name);\r\n            emailchange(resp.email);\r\n            phonechange(resp.phone);\r\n            genderchange(resp.gender)\r\n            coursechange(resp.course)\r\n            designationchange(resp.designation)\r\n            activechange(resp.isactive);\r\n        }).catch((err) => {\r\n            console.log(err.message);\r\n        })\r\n    }, []);\r\n\r\n    const[id,idchange]=useState(\"\");\r\n    const[name,namechange]=useState(\"\");\r\n    const[email,emailchange]=useState(\"\");\r\n    const[phone,phonechange]=useState(\"\");\r\n    const[gender,genderchange]=useState('')\r\n    const[course,coursechange]=useState(\"\")\r\n    const[designation,designationchange]=useState(\"\")\r\n    const[active,activechange]=useState(true);\r\n    const[validation,valchange]=useState(false);\r\n\r\n\r\n    const navigate=useNavigate();\r\n\r\n    const handlesubmit=(e)=>{\r\n      e.preventDefault();\r\n      const empdata={id,name,email,phone,gender,course,designation,active};\r\n      \r\n\r\n      fetch(\"http://localhost:3000/employee/\"+empid,{\r\n        method:\"PUT\",\r\n        headers:{\"content-type\":\"application/json\"},\r\n        body:JSON.stringify(empdata)\r\n      }).then((res)=>{\r\n        alert('Saved successfully.')\r\n        navigate('/');\r\n      }).catch((err)=>{\r\n        console.log(err.message)\r\n      })\r\n\r\n    }\r\n    return ( \r\n        <div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"offset-lg-3 col-lg-6\">\r\n                <form className=\"container\" onSubmit={handlesubmit}>\r\n\r\n                    <div className=\"card\" style={{\"textAlign\":\"left\"}}>\r\n                        <div className=\"card-title\">\r\n                            <h2>Employee Edit</h2>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>ID</label>\r\n                                        <input value={id} disabled=\"disabled\" className=\"form-control\"></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name</label>\r\n                                        <input required value={name} onMouseDown={e=>valchange(true)} onChange={e=>namechange(e.target.value)} className=\"form-control\"></input>\r\n                                    {name.length==0 && validation && <span className=\"text-danger\">Enter the name</span>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Email</label>\r\n                                        <input value={email} onChange={e=>emailchange(e.target.value)} className=\"form-control\"></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Phone</label>\r\n                                        <input value={phone} onChange={e=>phonechange(e.target.value)} className=\"form-control\"></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Gender</label>\r\n                                        <input value={gender} onChange={e=>genderchange(e.target.value)} className=\"form-control\"></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Course</label>\r\n                                        <input value={course} onChange={e=>coursechange(e.target.value)} className=\"form-control\"></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <label>Designation</label>\r\n                                        <input value={designation} onChange={e=>designationchange(e.target.value)} className=\"form-control\"></input>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"form-check\">\r\n                                    <input checked={active} onChange={e=>activechange(e.target.checked)} type=\"checkbox\" className=\"form-check-input\"></input>\r\n                                        <label  className=\"form-check-label\">Is Active</label>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-lg-12\">\r\n                                    <div className=\"form-group\">\r\n                                       <button className=\"btn btn-success\" type=\"submit\">Save</button>\r\n                                       <Link to=\"/\" className=\"btn btn-danger\">Back</Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default EmpEdit;","F:\\taskfrontend\\CRUD-Operations-\\src\\login.js",[],[],"F:\\taskfrontend\\CRUD-Operations-\\src\\Navbar.js",["55","56"],[],"import React from 'react'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#\">Home</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    \r\n\r\n  </div>\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#\">EmpListing</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    \r\n\r\n  </div>\r\n  <button type=\"button\" class=\"btn btn-primary\">Logout</button>\r\n</nav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar",{"ruleId":"57","severity":1,"message":"58","line":82,"column":45,"nodeType":"59","endLine":82,"endColumn":114},{"ruleId":"57","severity":1,"message":"58","line":83,"column":45,"nodeType":"59","endLine":83,"endColumn":119},{"ruleId":"57","severity":1,"message":"58","line":84,"column":45,"nodeType":"59","endLine":84,"endColumn":116},{"ruleId":"60","severity":1,"message":"61","line":18,"column":8,"nodeType":"62","endLine":18,"endColumn":10,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":6,"column":14,"nodeType":"66","messageId":"67","endLine":6,"endColumn":22},{"ruleId":"68","severity":1,"message":"69","line":63,"column":53,"nodeType":"70","messageId":"71","endLine":63,"endColumn":55},{"ruleId":"60","severity":1,"message":"61","line":24,"column":8,"nodeType":"62","endLine":24,"endColumn":10,"suggestions":"72"},{"ruleId":"68","severity":1,"message":"69","line":82,"column":49,"nodeType":"70","messageId":"71","endLine":82,"endColumn":51},{"ruleId":"57","severity":1,"message":"73","line":8,"column":5,"nodeType":"59","endLine":8,"endColumn":38},{"ruleId":"57","severity":1,"message":"73","line":16,"column":5,"nodeType":"59","endLine":16,"endColumn":38},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'empid'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-unused-vars","'idchange' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["75"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"76","fix":"77"},{"desc":"76","fix":"78"},"Update the dependencies array to be: [empid]",{"range":"79","text":"80"},{"range":"81","text":"80"},[501,503],"[empid]",[791,793]]